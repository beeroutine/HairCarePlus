using Microsoft.Maui.Controls;
using HairCarePlus.Client.Patient.Features.Chat.ViewModels;
using Microsoft.Extensions.Logging;

namespace HairCarePlus.Client.Patient.Features.Chat.Views;

public partial class ChatPage : ContentPage
{
    private readonly ChatViewModel _viewModel;
    private readonly ILogger<ChatPage> _logger;

    public ChatPage(ChatViewModel viewModel, ILogger<ChatPage> logger)
    {
        InitializeComponent();
        _viewModel = viewModel;
        _logger = logger;
        BindingContext = _viewModel;
        
        _logger.LogDebug("ChatPage constructed");

        // Set up menu items
        var takePhotoItem = new MenuFlyoutItem
        {
            Text = "Take Photo",
            IconImageSource = new FontImageSource
            {
                FontFamily = "FontAwesome",
                Glyph = "üì∑",
                Color = Colors.Black
            },
            Command = _viewModel.OpenCameraCommand
        };

        var choosePhotoItem = new MenuFlyoutItem
        {
            Text = "Choose Photo",
            IconImageSource = new FontImageSource
            {
                FontFamily = "FontAwesome",
                Glyph = "üñº",
                Color = Colors.Black
            },
            Command = _viewModel.ChoosePhotoCommand
        };

        AttachmentMenu.AddMenuItem(takePhotoItem);
        AttachmentMenu.AddMenuItem(choosePhotoItem);

        // –ü–µ—Ä–µ–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ CollectionView –≤ ViewModel –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        _viewModel.MessagesCollectionView = MessagesCollection;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        MessagesCollection.SelectionChanged += (sender, e) =>
        {
            _logger.LogDebug("MessagesCollection SelectionChanged");
        };
    }

    protected override async void OnAppearing()
    {
        base.OnAppearing();
        _logger.LogDebug("ChatPage OnAppearing");
        
        if (_viewModel != null)
        {
            await _viewModel.LoadDataCommand.ExecuteAsync(null);
            _logger.LogDebug("ChatPage data loaded");

            // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ ViewModel –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ CollectionView
            if (_viewModel.MessagesCollectionView == null)
            {
                _viewModel.MessagesCollectionView = MessagesCollection;
                _logger.LogDebug("MessagesCollectionView assigned in OnAppearing");
            }
        }
    }
} 