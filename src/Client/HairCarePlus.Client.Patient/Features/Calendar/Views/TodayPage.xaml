<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Name="TodayPageRoot"
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewmodels="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.ViewModels"
             xmlns:models="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.Models"
             xmlns:converters="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.Converters"
             xmlns:system="clr-namespace:System;assembly=netstandard"
             xmlns:behaviors="clr-namespace:HairCarePlus.Client.Patient.Common.Behaviors"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="HairCarePlus.Client.Patient.Features.Calendar.Views.TodayPage"
             x:DataType="viewmodels:TodayViewModel"
             BackgroundColor="{AppThemeBinding Light=#F7F7F7, Dark=#121212}"
             Title="Today">

    <Shell.TitleView>
        <Label Text="Today"
               FontSize="20"
               FontAttributes="Bold"
               HorizontalOptions="Center"
               VerticalOptions="Center">
            <Label.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ToggleRestrictionsVisibilityCommand}" />
            </Label.GestureRecognizers>
        </Label>
    </Shell.TitleView>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:EventIndicatorsConverter x:Key="EventIndicatorsConverter"/>
            <converters:DateHasEventTypeConverter x:Key="DateHasEventTypeConverter"/>
            <converters:DateHasAnyEventConverter x:Key="DateHasAnyEventConverter"/>
            <converters:DateHasAnyEventColorConverter x:Key="DateHasAnyEventColorConverter"/>
            <converters:TimeOfDayToStringConverter x:Key="TimeOfDayToStringConverter"/>
            <converters:TimeOfDayToColorConverter x:Key="TimeOfDayToColorConverter"/>
            <converters:IsExpiredConverter x:Key="IsExpiredConverter"/>
            <converters:EventPriorityToColorConverter x:Key="EventPriorityToColorConverter"/>
            <converters:EventPriorityToIconConverter x:Key="EventPriorityToIconConverter"/>
            <converters:PriorityVisibilityConverter x:Key="PriorityVisibilityConverter"/>
            <converters:ProgressToAngleConverter x:Key="ProgressToAngleConverter"/>
            <converters:ProgressToDashArrayConverter x:Key="ProgressToDashArrayConverter"/>
            <x:Double x:Key="CircleSize">100</x:Double>
            
            <!-- Layout Resources -->
            <LinearItemsLayout x:Key="HorizontalLinearLayout" 
                             Orientation="Horizontal" 
                             ItemSpacing="5"
                             SnapPointsType="None"
                             SnapPointsAlignment="Center"/>
            
            <!-- Date Selector Item Template -->
            <DataTemplate x:Key="DateTemplate" x:DataType="system:DateTime">
                <Grid x:Name="rootContainer" 
                       WidthRequest="55" 
                       HeightRequest="60" 
                       Padding="0" 
                       Margin="0"
                       BackgroundColor="Transparent">
                    <!-- VSM moved into frame to avoid XAMLC TargetName issues -->
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Day of Week -->
                    <Label Grid.Row="0" 
                          Text="{Binding ., StringFormat='{0:ddd}'}"
                          FontSize="12"
                          TextColor="{StaticResource Gray500}"
                          HorizontalOptions="Center"
                          Margin="0,0,0,2"/>

                    <!-- Day number in circle -->
                    <Frame Grid.Row="1"
                          x:Name="dayFrame"
                          CornerRadius="20"
                          Padding="0"
                          WidthRequest="40"
                          HeightRequest="40"
                          BackgroundColor="Transparent"
                          BorderColor="{Binding ., Converter={StaticResource DateHasAnyEventColorConverter}}"
                          HorizontalOptions="Center"
                          VerticalOptions="Center"
                          Shadow="{Binding ., Converter={StaticResource DateHasAnyEventConverter}, ConverterParameter=Shadow}">
                        <Label x:Name="dayText"
                              Text="{Binding ., StringFormat='{0:%d}'}"
                              FontSize="16"
                              HorizontalOptions="Center"
                              VerticalOptions="Center"
                              TextColor="{Binding ., Converter={StaticResource DateHasAnyEventConverter}, ConverterParameter=TextColor}"/>
                    </Frame>

                    <!-- Event Indicators bar -->
                    <BoxView Grid.Row="2"
                            HeightRequest="3"
                            CornerRadius="1.5"
                            WidthRequest="24"
                            HorizontalOptions="Center"
                            Margin="0,4,0,0"
                            IsVisible="False"
                            Color="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />

                    <!-- Event Indicators details -->
                    <HorizontalStackLayout Grid.Row="2"
                                        VerticalOptions="End" 
                                        HorizontalOptions="Center"
                                        Spacing="3"
                                        Margin="0,10,0,0"
                                        IsVisible="False">
                        <BoxView WidthRequest="6" 
                                HeightRequest="6" 
                                CornerRadius="3"
                                Color="{StaticResource MedicationBlue}"
                                IsVisible="{Binding ., Converter={StaticResource DateHasEventTypeConverter}, ConverterParameter={x:Static models:EventType.MedicationTreatment}}"/>
                        
                        <BoxView WidthRequest="6" 
                                HeightRequest="6"
                                CornerRadius="3"
                                Color="{StaticResource PhotoPurple}"
                                IsVisible="{Binding ., Converter={StaticResource DateHasEventTypeConverter}, ConverterParameter={x:Static models:EventType.Photo}}"/>
                                
                        <BoxView WidthRequest="6" 
                                HeightRequest="6"
                                CornerRadius="3"
                                Color="{StaticResource VideoOrange}"
                                IsVisible="{Binding ., Converter={StaticResource DateHasEventTypeConverter}, ConverterParameter={x:Static models:EventType.Video}}"/>
                    </HorizontalStackLayout>
                    
                    <Grid.GestureRecognizers>
                        <!-- REMOVED: The TapGestureRecognizer below was redundant as selection is handled by CollectionView.SelectedItem -->
                        <TapGestureRecognizer 
                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:TodayViewModel}}, Path=OpenMonthCalendarCommand}"
                            CommandParameter="{Binding .}"
                            NumberOfTapsRequired="2" />
                    </Grid.GestureRecognizers>

                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="dayFrame" Property="Frame.BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="dayText" Property="Label.TextColor" Value="{Binding ., Converter={StaticResource DateHasAnyEventConverter}, ConverterParameter=TextColor}" /> 
                                    <Setter Property="Scale" Value="1.0" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="Selected">
                                <VisualState.Setters>
                                    <Setter TargetName="dayFrame" Property="Frame.BackgroundColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
                                    <Setter TargetName="dayFrame" Property="Frame.BorderColor" Value="Transparent" />
                                    <Setter TargetName="dayText" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
                                    <Setter Property="Scale" Value="1.05" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Grid>
            </DataTemplate>

            <!-- Event Item Template -->
            <DataTemplate x:Key="EventTemplate" x:DataType="models:CalendarEvent">
                <SwipeView>
                    <SwipeView.RightItems>
                        <SwipeItems Mode="Execute">
                            <SwipeItem Text="Done"
                                       BackgroundColor="{AppThemeBinding Light=#4CAF50, Dark=#388E3C}"
                                       Invoked="OnSwipeItemDoneInvoked">
                                <SwipeItem.IconImageSource>
                                    <FontImageSource Glyph="&#xE876;" FontFamily="MaterialIcons" Color="White" />
                                </SwipeItem.IconImageSource>
                            </SwipeItem>
                        </SwipeItems>
                    </SwipeView.RightItems>
                    <Border Margin="0,4,0,0"
                            x:Name="rootCard"
                            StrokeThickness="0"
                            BackgroundColor="{AppThemeBinding Light=#EAF4FC, Dark=#1E2A35}"
                            Stroke="Transparent"
                            StrokeShape="RoundRectangle 18">
                        <!-- Long press handled via CommunityToolkit TouchBehavior below -->
                        <Border.Behaviors>
                            <toolkit:TouchBehavior
                                  BindingContext="{Binding Source={x:Reference rootCard}, Path=BindingContext}"
                                  LongPressDuration="2000"
                                  LongPressCommand="{Binding Source={x:Reference TodayPageRoot}, Path=BindingContext.ToggleEventCompletionCommand}"
                                  LongPressCommandParameter="{Binding .}" />
                        </Border.Behaviors>
                        <Grid ColumnDefinitions="Auto,*" ColumnSpacing="12">
                            <!-- Icon with background -->
                            <Frame Grid.Column="0"
                                   WidthRequest="40"
                                   HeightRequest="40"
                                   CornerRadius="20"
                                   Padding="0"
                                   HasShadow="False"
                                   BorderColor="Transparent"
                                   BackgroundColor="{Binding EventType, Converter={StaticResource EventTypeToColorConverter}}">
                                <Label Text="{Binding EventType, Converter={StaticResource EventTypeToIconConverter}}"
                                       FontFamily="MaterialIcons"
                                       FontSize="20"
                                       TextColor="White"
                                       HorizontalOptions="Center"
                                       VerticalOptions="Center"/>
                            </Frame>

                            <!-- Task Content -->
                            <VerticalStackLayout Grid.Column="1" Spacing="2" VerticalOptions="Start">
                                <Label Text="{Binding Date, StringFormat='{0:HH:mm}'}"
                                       FontSize="14"
                                       FontAttributes="Bold"
                                       Margin="0,0,0,2"
                                       TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"/>
                                <Label x:Name="titleLabel"
                                       Text="{Binding Title}"
                                       FontSize="16"
                                       FontAttributes="None"
                                       TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding IsCompleted}" Value="True">
                                            <Setter Property="TextDecorations" Value="Strikethrough" />
                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray500}}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <Grid>
                                    <Label x:Name="descriptionLabel"
                                           Text="{Binding Description}"
                                           FontSize="14"
                                           LineBreakMode="TailTruncation"
                                           MaxLines="2"
                                           TextColor="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}"/>
                                    <Label Text="Подробнее..."
                                           FontSize="13"
                                           TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                                           HorizontalOptions="End"
                                           VerticalOptions="End"
                                           IsVisible="{Binding Source={x:Reference descriptionLabel}, Path=LineBreakMode, Converter={StaticResource StringNotEmptyConverter}}">
                                        <Label.GestureRecognizers>
                                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:TodayViewModel}}, Path=ShowEventDetailsCommand}"
                                                                 CommandParameter="{Binding .}"/>
                                        </Label.GestureRecognizers>
                                    </Label>
                                </Grid>
                            </VerticalStackLayout>
                        </Grid>
                        <!-- Visual state when completed -->
                        <Border.Triggers>
                            <DataTrigger TargetType="Border" Binding="{Binding IsCompleted}" Value="True">
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light=#DDEEE0, Dark=#2A3B2C}" />
                                <Setter Property="Opacity" Value="0.6" />
                            </DataTrigger>
                        </Border.Triggers>
                    </Border>
                </SwipeView>
            </DataTemplate>
            
            <!-- No events template -->
            <DataTemplate x:Key="EmptyViewTemplate">
                <StackLayout VerticalOptions="CenterAndExpand" 
                             HorizontalOptions="CenterAndExpand" 
                             Padding="20">
                    <Image Source="dotnet_bot.png"
                           WidthRequest="60"
                           HeightRequest="60"
                           Opacity="0.6"
                           IsVisible="false" />
                    <Label Text="No events scheduled for this day" 
                           HorizontalTextAlignment="Center"
                           FontSize="16"
                           Margin="0,20,0,0"
                           TextColor="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray400}}"/>
                </StackLayout>
            </DataTemplate>

            <!-- Style for restriction circular icon -->
            <Style x:Key="RestrictionIconBorderStyle" TargetType="Border">
                <Setter Property="WidthRequest" Value="40" />
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="StrokeShape">
                    <EllipseGeometry RadiusX="20" RadiusY="20" />
                </Setter>
                <Setter Property="StrokeThickness" Value="2" />
                <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray600}}" />
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid RowDefinitions="Auto,*" Padding="0">
        <!-- Fixed Header -->
        <Frame Grid.Row="0" 
               BackgroundColor="{AppThemeBinding Light=#F7F7F7, Dark=#121212}"
               BorderColor="Transparent"
               CornerRadius="0"
               Margin="0"
               Padding="0"
               HasShadow="False">
            <!-- Header structured as Grid: Row0 = restrictions, Row1 = circle/month, Row2 = horizontal calendar -->
            <Grid x:Name="HeaderGrid"
                  Padding="16,8,16,0"
                  RowDefinitions="Auto,Auto">

                <!-- Single row header: left = circle, right = vertical stack (restrictions + month/year) -->
                <Grid Grid.Row="0" ColumnDefinitions="Auto,*" ColumnSpacing="15" Margin="0,4,0,8" VerticalOptions="Center">
                     <!-- COL 0: Date Circle -->
                     <Grid Grid.Column="0"
                           HorizontalOptions="Start"
                           VerticalOptions="Center"
                           WidthRequest="{StaticResource CircleSize}"
                           HeightRequest="{StaticResource CircleSize}">
                         
                         <!-- Добавляем распознаватель жестов для прокрутки к сегодняшней дате -->
                         <Grid.GestureRecognizers>
                             <TapGestureRecognizer Command="{Binding GoToTodayCommand}" />
                         </Grid.GestureRecognizers>
                           
                         <!-- Background Circle -->
                         <Border StrokeShape="Ellipse"
                                Stroke="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray700}}"
                                StrokeThickness="4"
                                BackgroundColor="Transparent"
                                WidthRequest="{StaticResource CircleSize}"
                                HeightRequest="{StaticResource CircleSize}"/>
                               
                         <!-- PROGRESS OVERLAY -->
                         <Border StrokeShape="Ellipse"
                                Stroke="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryLight}}"
                                StrokeThickness="4"
                                StrokeLineCap="Flat"
                                StrokeDashOffset="0"
                                BackgroundColor="Transparent"
                                WidthRequest="{StaticResource CircleSize}"
                                HeightRequest="{StaticResource CircleSize}"
                                Rotation="-90"
                                StrokeDashArray="{Binding CompletionProgress, Converter={StaticResource ProgressToDashArrayConverter}, ConverterParameter={StaticResource CircleSize}}"/>
                                
                         <!-- Day Number and Day Name (tap toggles restrictions) -->
                         <VerticalStackLayout VerticalOptions="Center" HorizontalOptions="Center" Spacing="2">
                             <!-- Дата всегда показывает сегодняшний день -->
                             <Label Text="{Binding Source={x:Static system:DateTime.Today}, Path=Day}" 
                                    FontSize="32" 
                                    FontAttributes="Bold" 
                                    TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                                    HorizontalTextAlignment="Center"/>
                             <Label Text="{Binding Source={x:Static system:DateTime.Today}, StringFormat='{0:ddd}'}" 
                                    FontSize="14" 
                                    TextColor="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}"
                                    HorizontalTextAlignment="Center"
                                    Margin="0,-5,0,0"/>
                         </VerticalStackLayout>
                     </Grid>

                     <!-- COL 1: Right stack with restrictions and month/year -->
                     <VerticalStackLayout Grid.Column="1" Spacing="4" HorizontalOptions="End" VerticalOptions="Center">
                         <Label HorizontalOptions="End" VerticalOptions="Center" TranslationY="12">
                             <Label.FormattedText>
                                 <FormattedString>
                                     <Span Text="{Binding CurrentMonthName}" 
                                           FontSize="28" 
                                           FontAttributes="Bold" 
                                           TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"/>
                                     <Span Text=" "/>
                                     <Span Text="{Binding CurrentYear}" 
                                           FontSize="18" 
                                           FontAttributes="None" 
                                           TextColor="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}"/>
                                 </FormattedString>
                             </Label.FormattedText>
                         </Label>
                     </VerticalStackLayout>
                 </Grid>

                <!-- ROW 1: Horizontal calendar selector (now next row index) -->
                <CollectionView Grid.Row="1"
                                x:Name="DateSelectorView"
                                SelectionMode="Single"
                                SelectedItem="{Binding SelectedDate, Mode=TwoWay}"
                                ItemsSource="{Binding SelectableDates}"
                                BackgroundColor="Transparent"
                                ItemTemplate="{StaticResource DateTemplate}"
                                ItemsLayout="{StaticResource HorizontalLinearLayout}"
                                HeightRequest="75" 
                                HorizontalScrollBarVisibility="Never"
                                VerticalScrollBarVisibility="Never">
                    <CollectionView.Behaviors>
                        <behaviors:CollectionViewSelectionStateBehavior />
                    </CollectionView.Behaviors>
                </CollectionView>
            </Grid>
        </Frame>

        <!-- Main Content Area -->
        <ScrollView Grid.Row="1" VerticalScrollBarVisibility="Never">
            <VerticalStackLayout Padding="16,10,16,16" Spacing="10">
                <!-- Event List -->
                <CollectionView ItemsSource="{Binding EventsForSelectedDate}"
                                ItemTemplate="{StaticResource EventTemplate}"
                                EmptyViewTemplate="{StaticResource EmptyViewTemplate}"
                                VerticalOptions="FillAndExpand">
                    <CollectionView.ItemsLayout>
                        <LinearItemsLayout Orientation="Vertical" ItemSpacing="8"/>
                    </CollectionView.ItemsLayout>
                </CollectionView>
            </VerticalStackLayout>
        </ScrollView>
    </Grid>
</ContentPage>