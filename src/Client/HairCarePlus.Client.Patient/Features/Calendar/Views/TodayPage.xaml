<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Name="TodayPageRoot"
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewmodels="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.ViewModels"
             xmlns:models="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.Models"
             xmlns:converters="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.Converters"
             xmlns:system="clr-namespace:System;assembly=netstandard"
             xmlns:behaviors="clr-namespace:HairCarePlus.Client.Patient.Common.Behaviors"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:local="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.Views"
             xmlns:views="clr-namespace:HairCarePlus.Client.Patient.Common.Views"
             xmlns:skia="clr-namespace:SkiaSharp.Extended.UI.Controls;assembly=SkiaSharp.Extended.UI"
             xmlns:commonViews="clr-namespace:HairCarePlus.Client.Patient.Common.Views"
             xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls"
             x:Class="HairCarePlus.Client.Patient.Features.Calendar.Views.TodayPage"
             x:DataType="viewmodels:TodayViewModel"
             BackgroundColor="{AppThemeBinding Light=#F7F7F7, Dark=#1C1C1E}"
             ios:Page.UseSafeArea="False"
             Shell.NavBarIsVisible="False"
             Title="">

    <ContentPage.Content>
        <Grid RowDefinitions="Auto, Auto, *" 
              RowSpacing="12">
            <Grid.Padding>
                <OnPlatform x:TypeArguments="Thickness">
                    <On Platform="iOS" Value="20,64,20,0" />
                    <On Platform="Android" Value="20,24,20,0" />
                </OnPlatform>
            </Grid.Padding>

            <!-- New Header Section -->
            <Grid Grid.Row="0" ColumnDefinitions="Auto, *" ColumnSpacing="12" Margin="0,0,0,8">
                <!-- Left Side: Today's Date Circle with Progress -->
                <Border WidthRequest="112" 
                        HeightRequest="112" 
                        StrokeShape="Ellipse"
                        BackgroundColor="Transparent"
                        StrokeThickness="0"
                        HorizontalOptions="Start">
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding GoToTodayCommand}"/>
                    </Border.GestureRecognizers>
                    <Grid>
                        <commonViews:SkiaProgressRing
                            x:Name="ProgressRingRef"
                            Progress="{Binding CompletionProgress}"
                            Thickness="6"
                            HeightRequest="112"
                            WidthRequest="112"
                            HorizontalOptions="Center"
                            VerticalOptions="Center"/>
                        <VerticalStackLayout Spacing="2" HorizontalOptions="Center" VerticalOptions="Center" Padding="0">
                            <Label Text="{Binding TodayDay}"
                                   FontSize="48" FontAttributes="Bold"
                                   TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                                   HorizontalOptions="Center"/>
                            <Label Text="{Binding TodayDayOfWeek}" 
                                   FontSize="18"
                                   TextColor="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}"
                                   HorizontalOptions="Center"/>
                        </VerticalStackLayout>
                    </Grid>
                </Border>

                <!-- Right Side: Selected Date's Month and Transplant Info -->
                <VerticalStackLayout Grid.Column="1" VerticalOptions="Center" HorizontalOptions="EndAndExpand" Spacing="4">
                    <Label Text="{Binding CurrentMonthName}" 
                           FontSize="28" 
                           FontAttributes="Bold"
                           TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                           HorizontalOptions="End"/>
                    <Label Text="{Binding DaysSinceTransplantSubtitle}" 
                           FontSize="14" 
                           TextColor="{AppThemeBinding Light={StaticResource Gray700}, Dark={StaticResource Gray400}}"
                           HorizontalOptions="End"/>
                </VerticalStackLayout>
            </Grid>

            <!-- Horizontal Calendar Days -->
            <CollectionView Grid.Row="1"
                            x:Name="DateSelectorView"
                            ItemsSource="{Binding CalendarDays}"
                            SelectionMode="Single" 
                            SelectedItem="{Binding SelectedDate, Mode=TwoWay}"
                            ItemTemplate="{StaticResource DateTemplate}"
                            ItemsLayout="{StaticResource HorizontalLinearLayout}"
                            HorizontalScrollBarVisibility="Never"
                            HeightRequest="80" 
                            Margin="0,0,0,4">
                <CollectionView.Behaviors>
                    <behaviors:CollectionViewHeaderSyncBehavior VisibleDate="{Binding VisibleDate, Mode=TwoWay}"
                                                                SelectableDates="{Binding CalendarDays}" />
                    <behaviors:CollectionViewSelectionStateBehavior />
                    <behaviors:CenterOnSelectedBehavior />
                </CollectionView.Behaviors>
            </CollectionView>

            <!-- Events List -->
            <CollectionView Grid.Row="2"
                            x:Name="EventsCollectionView"
                            ItemsSource="{Binding FlattenedEvents}"
                            ItemTemplate="{StaticResource EventTemplate}"
                            SelectionMode="None"
                            VerticalScrollBarVisibility="Never"
                            EmptyView="{StaticResource EventsEmptyViewTemplate}"
                            Margin="0,0,0,0">
                <CollectionView.ItemsLayout>
                    <LinearItemsLayout Orientation="Vertical" ItemSpacing="10"/>
                </CollectionView.ItemsLayout>
            </CollectionView>

            <!-- Confetti overlay using SkiaSharp -->
            <skia:SKConfettiView x:Name="ConfettiView"
                                 Grid.RowSpan="3"
                                 IsAnimationEnabled="False"
                                 InputTransparent="True"
                                 HorizontalOptions="Fill"
                                 VerticalOptions="Fill" />

        </Grid>

    </ContentPage.Content>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:EventIndicatorsConverter x:Key="EventIndicatorsConverter"/>
            <converters:DateHasEventTypeConverter x:Key="DateHasEventTypeConverter"/>
            <converters:DateHasAnyEventConverter x:Key="DateHasAnyEventConverter"/>
            <converters:DateHasAnyEventColorConverter x:Key="DateHasAnyEventColorConverter"/>
            <converters:TimeOfDayToStringConverter x:Key="TimeOfDayToStringConverter"/>
            <converters:TimeOfDayToColorConverter x:Key="TimeOfDayToColorConverter"/>
            <converters:IsExpiredConverter x:Key="IsExpiredConverter"/>
            <converters:DateEqualityConverter x:Key="DateEqualityConverter"/>
            <converters:EventPriorityToColorConverter x:Key="EventPriorityToColorConverter"/>
            <converters:EventPriorityToIconConverter x:Key="EventPriorityToIconConverter"/>
            <converters:PriorityVisibilityConverter x:Key="PriorityVisibilityConverter"/>
            <converters:ProgressToAngleConverter x:Key="ProgressToAngleConverter"/>
            <x:Double x:Key="CircleSize">88</x:Double>
            
            <!-- Layout Resources -->
            <LinearItemsLayout x:Key="HorizontalLinearLayout" 
                             Orientation="Horizontal" 
                             ItemSpacing="6"
                             SnapPointsType="None"
                             SnapPointsAlignment="Center"/>
            
            <!-- Date Selector Item Template -->
            <DataTemplate x:Key="DateTemplate" x:DataType="system:DateTime">
                <Grid x:Name="rootContainer" 
                      WidthRequest="60"
                      HeightRequest="75"
                      Padding="0" 
                      Margin="0">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="Grid.BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="dayOfWeekLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
                                    <Setter TargetName="dayNumberLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
                                    <Setter TargetName="dayCircleBorder" Property="Border.BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="dayCircleBorder" Property="Border.StrokeThickness" Value="0" />
                                    <Setter Property="Grid.Scale" Value="1" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="Grid.BackgroundColor" Value="Transparent" /> 
                                    <Setter TargetName="dayOfWeekLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" /> 
                                    <Setter TargetName="dayCircleBorder" Property="Border.BackgroundColor" 
                                            Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" /> 
                                    <Setter TargetName="dayCircleBorder" Property="Border.StrokeThickness" Value="0" />
                                    <Setter TargetName="dayNumberLabel" Property="Label.TextColor" 
                                            Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
                                    <Setter Property="Grid.Scale" Value="1.1" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <!-- Add trigger for current date -->
                    <Grid.Triggers>
                        <DataTrigger TargetType="Grid" 
                                   Binding="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:TodayViewModel}}, Path=SelectedDate, Converter={StaticResource DateEqualityConverter}}"
                                   Value="{Binding .}">
                            <Setter Property="Grid.BackgroundColor" Value="Transparent" />
                            <Setter TargetName="dayCircleBorder" Property="Border.BackgroundColor" 
                                    Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
                            <Setter TargetName="dayNumberLabel" Property="Label.TextColor" 
                                    Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
                            <Setter Property="Grid.Scale" Value="1.1" />
                        </DataTrigger>
                    </Grid.Triggers>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Day of Week -->
                    <Label Grid.Row="0" 
                          x:Name="dayOfWeekLabel"
                          Text="{Binding ., StringFormat='{0:ddd}'}"
                          FontSize="15"
                          FontAttributes="None"
                          HorizontalOptions="Center"
                          Margin="0,0,0,4"
                          InputTransparent="True"/>

                    <!-- Day number in circle/just text -->
                    <Border Grid.Row="1"
                           x:Name="dayCircleBorder" 
                           Padding="0"
                           WidthRequest="44"
                           HeightRequest="44"
                           StrokeShape="Ellipse"
                           StrokeThickness="0" 
                           BackgroundColor="Transparent" 
                           HorizontalOptions="Center"
                           VerticalOptions="Center">
                        <Label Text="{Binding ., StringFormat='{0:%d}'}"
                               FontSize="18"
                               HorizontalOptions="Center"
                               VerticalOptions="Center"
                               x:Name="dayNumberLabel"/>
                    </Border>

                    <!-- Unified indicator bar instead of three dots -->
                    <BoxView Grid.Row="2"
                             HeightRequest="3"
                             CornerRadius="1.5"
                             WidthRequest="24"
                             HorizontalOptions="Center"
                             Margin="0,4,0,0"
                             Color="{Binding Converter={StaticResource DateHasAnyEventColorConverter}}"
                             IsVisible="{Binding Converter={StaticResource DateHasAnyEventConverter}}" />
                    
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:TodayViewModel}}, Path=SelectDateCommand}"
                                             CommandParameter="{Binding .}" />
                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:TodayViewModel}}, Path=OpenMonthCalendarCommand}"
                                             CommandParameter="{Binding .}"
                                             NumberOfTapsRequired="2" />
                    </Grid.GestureRecognizers>
                    
                    <!-- Using proper MAUI 9 binding syntax for BackgroundColor -->
                    <!-- This binding might conflict with VSM, removing for now as VSM controls rootContainer's BackgroundColor -->
                    <!-- 
                    <Grid.BackgroundColor>
                        <Binding Source="{x:Reference rootContainer}" Path="BackgroundColor" />
                    </Grid.BackgroundColor> 
                    -->
                </Grid>
            </DataTemplate>

            <!-- Event Item Template -->
            <DataTemplate x:Key="EventTemplate" x:DataType="models:CalendarEvent">
                <SwipeView>
                    <SwipeView.RightItems>
                        <SwipeItems Mode="Execute">
                            <SwipeItem
                                    BackgroundColor="Transparent"
                                    Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:TodayViewModel}}, Path=ToggleEventCompletionCommand}"
                                    CommandParameter="{Binding .}">
                            </SwipeItem>
                        </SwipeItems>
                    </SwipeView.RightItems>
                    <Border x:Name="rootCard"
                            Style="{StaticResource CalendarCardBorderStyle}"
                            HorizontalOptions="Fill"
                            BackgroundColor="{AppThemeBinding Light={StaticResource TaskCardBackgroundLight}, Dark={StaticResource TaskCardBackgroundDark}}"
                            Padding="16,16,16,16">
                        <Grid ColumnDefinitions="Auto,*" ColumnSpacing="16" VerticalOptions="Start">
                            <!-- Icon with background -->
                            <Border Grid.Column="0" Grid.Row="0" VerticalOptions="Start"
                                    WidthRequest="44"
                                    HeightRequest="44"
                                    StrokeShape="RoundRectangle 22"
                                    Padding="0"
                                    StrokeThickness="0"
                                    BackgroundColor="{AppThemeBinding Light={StaticResource MedicationBlueLight}, Dark={StaticResource MedicationBlueDark}}">
                                <Border.Triggers>
                                    <DataTrigger TargetType="Border" Binding="{Binding EventType}" Value="MedicationTreatment">
                                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource MedicationBlueLight}, Dark={StaticResource MedicationBlueDark}}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Border" Binding="{Binding EventType}" Value="MedicalVisit">
                                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource AppointmentGreenLight}, Dark={StaticResource AppointmentGreenDark}}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Border" Binding="{Binding EventType}" Value="Photo">
                                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PhotoPurpleLight}, Dark={StaticResource PhotoPurpleDark}}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Border" Binding="{Binding EventType}" Value="Video">
                                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource VideoOrangeLight}, Dark={StaticResource VideoOrangeDark}}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Border" Binding="{Binding EventType}" Value="GeneralRecommendation">
                                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource GeneralGrayLight}, Dark={StaticResource GeneralGrayDark}}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Border" Binding="{Binding EventType}" Value="CriticalWarning">
                                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource CriticalRedLight}, Dark={StaticResource CriticalRedDark}}" />
                                    </DataTrigger>
                                </Border.Triggers>
                                <Label Text="{Binding EventType, Converter={StaticResource EventTypeToIconConverter}}"
                                       FontFamily="MaterialIcons"
                                       FontSize="20"
                                       TextColor="White"
                                       HorizontalOptions="Center"
                                       VerticalOptions="Center"/>
                            </Border>

                            <!-- Task Content Combined -->
                            <VerticalStackLayout Grid.Column="1" Grid.Row="0" Spacing="2" VerticalOptions="Start">
                                <Label x:Name="titleLabel"
                                       Text="{Binding Title}"
                                       FontSize="15"
                                       FontAttributes="Bold"
                                       LineBreakMode="WordWrap"
                                       MaxLines="2"
                                       HorizontalOptions="Fill"
                                       TextColor="{AppThemeBinding Light={StaticResource TaskCardTextColorLight}, Dark={StaticResource TaskCardTextColorDark}}"
                                       LineHeight="1.2">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding IsCompleted}" Value="True">
                                            <Setter Property="TextDecorations" Value="Strikethrough" />
                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <toolkit:Expander IsExpanded="False">
                                    <toolkit:Expander.Triggers>
                                        <DataTrigger TargetType="toolkit:Expander" Binding="{Binding Description}" Value="">
                                            <Setter Property="IsVisible" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="toolkit:Expander" Binding="{Binding Description}" Value="{x:Null}">
                                            <Setter Property="IsVisible" Value="False" />
                                        </DataTrigger>
                                    </toolkit:Expander.Triggers>
                                    <toolkit:Expander.Header>
                                        <Label Text="{Binding Description}"
                                               FontSize="15"
                                               LineBreakMode="TailTruncation"
                                               MaxLines="2"
                                               LineHeight="1.3"
                                               TextColor="{AppThemeBinding Light={StaticResource TaskCardTextColorLight}, Dark={StaticResource TaskCardTextColorDark}}"
                                               Opacity="0.8" />
                                    </toolkit:Expander.Header>
                                    <Label Text="{Binding Description}"
                                           FontSize="15"
                                           LineHeight="1.3"
                                           TextColor="{AppThemeBinding Light={StaticResource TaskCardTextColorLight}, Dark={StaticResource TaskCardTextColorDark}}"
                                           Opacity="0.8"
                                           Padding="0,8,0,0" />
                                </toolkit:Expander>
                            </VerticalStackLayout>
                        </Grid>
                        <!-- Visual state when completed -->
                        <Border.Triggers>
                            <DataTrigger TargetType="Border" Binding="{Binding IsCompleted}" Value="True">
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource CardCompletedLight}, Dark={StaticResource CardCompletedDark}}" />
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                        </Border.Triggers>
                    </Border>
                </SwipeView>
            </DataTemplate>
            
            <!-- Empty View Template (Moved here) -->
            <DataTemplate x:Key="EventsEmptyViewTemplate">
                <StackLayout VerticalOptions="Center" HorizontalOptions="Center" Spacing="10" Padding="20">
                    <Label Text="📅" 
                           FontSize="64"
                           HorizontalOptions="Center" />
                    <Label Text="Нет событий на выбранную дату" 
                           HorizontalOptions="Center" 
                           FontSize="18"
                           TextColor="{AppThemeBinding Light={StaticResource Gray700}, Dark={StaticResource Gray400}}"/>
                    <Label Text="Попробуйте выбрать другой день или добавьте новые события." 
                           HorizontalOptions="Center" 
                           FontSize="14"
                           TextColor="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray500}}"
                           HorizontalTextAlignment="Center"/>
                </StackLayout>
            </DataTemplate>

            <!-- Style for restriction circular icon -->
            <Style x:Key="RestrictionIconBorderStyle" TargetType="Border">
                <Setter Property="WidthRequest" Value="40" />
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="StrokeShape">
                    <EllipseGeometry RadiusX="20" RadiusY="20" />
                </Setter>
                <Setter Property="StrokeThickness" Value="2" />
                <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray600}}" />
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
</ContentPage>