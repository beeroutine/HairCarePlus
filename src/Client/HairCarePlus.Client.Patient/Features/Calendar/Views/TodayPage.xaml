<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Name="TodayPageRoot"
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewmodels="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.ViewModels"
             xmlns:models="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.Models"
             xmlns:converters="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.Converters"
             xmlns:system="clr-namespace:System;assembly=netstandard"
             xmlns:behaviors="clr-namespace:HairCarePlus.Client.Patient.Common.Behaviors"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:local="clr-namespace:HairCarePlus.Client.Patient.Features.Calendar.Views"
             xmlns:views="clr-namespace:HairCarePlus.Client.Patient.Common.Views"
             x:Class="HairCarePlus.Client.Patient.Features.Calendar.Views.TodayPage"
             x:DataType="viewmodels:TodayViewModel"
             BackgroundColor="{AppThemeBinding Light=#F7F7F7, Dark=#1C1C1E}"
             Title="">

    <ContentPage.Content>
        <Grid RowDefinitions="Auto, Auto, *" 
              RowSpacing="14" 
              Padding="16,20,16,0">

            <!-- New Header Section -->
            <Grid Grid.Row="0" ColumnDefinitions="Auto, *" ColumnSpacing="12" Margin="0,0,0,12">
                <!-- Left Side: Today's Date Circle with Progress -->
                <Border WidthRequest="112" 
                        HeightRequest="112" 
                        StrokeShape="Ellipse"
                        BackgroundColor="Transparent"
                        StrokeThickness="0"
                        HorizontalOptions="Start">
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding GoToTodayCommand}"/>
                    </Border.GestureRecognizers>
                    <Grid>
                        <views:ProgressRingView 
                            Progress="{Binding CompletionProgress}" 
                            TrackColor="{AppThemeBinding Light={StaticResource ProgressTrackLight}, Dark=#525252}"
                            ProgressColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryLight}}"
                            StrokeWidth="4"
                            WidthRequest="112" HeightRequest="112"
                            HorizontalOptions="Center" VerticalOptions="Center"/>
                        <VerticalStackLayout Spacing="2" HorizontalOptions="Center" VerticalOptions="Center" Padding="0">
                            <Label Text="{Binding TodayDay}"
                                   FontSize="48" FontAttributes="Bold"
                                   TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                                   HorizontalOptions="Center"/>
                            <Label Text="{Binding TodayDayOfWeek}" 
                                   FontSize="18"
                                   TextColor="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}"
                                   HorizontalOptions="Center"/>
                        </VerticalStackLayout>
                    </Grid>
                </Border>

                <!-- Right Side: Selected Date's Month and Transplant Info -->
                <VerticalStackLayout Grid.Column="1" VerticalOptions="Center" HorizontalOptions="EndAndExpand" Spacing="4">
                    <Label Text="{Binding CurrentMonthName}" 
                           FontSize="28" 
                           FontAttributes="Bold"
                           TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                           HorizontalOptions="End"/>
                    <Label Text="{Binding DaysSinceTransplantSubtitle}" 
                           FontSize="14" 
                           TextColor="{AppThemeBinding Light={StaticResource Gray700}, Dark={StaticResource Gray400}}"
                           HorizontalOptions="End"/>
                </VerticalStackLayout>
            </Grid>

            <!-- Horizontal Calendar Days -->
            <CollectionView Grid.Row="1"
                            x:Name="DateSelectorView"
                            ItemsSource="{Binding CalendarDays}"
                            SelectedItem="{Binding SelectedDate, Mode=TwoWay}"
                            SelectionMode="Single"
                            ItemTemplate="{StaticResource DateTemplate}"
                            ItemsLayout="{StaticResource HorizontalLinearLayout}"
                            HorizontalScrollBarVisibility="Never"
                            HeightRequest="80" 
                            Margin="0,0,0,10">
                <!-- <CollectionView.Behaviors>
                    <behaviors:ScrollToIndexBehavior TargetIndex="{Binding ScrollToIndexTarget}" />
                </CollectionView.Behaviors> -->
            </CollectionView>

            <!-- Events List -->
            <CollectionView Grid.Row="2"
                            ItemsSource="{Binding FlattenedEvents}"
                            ItemTemplate="{StaticResource EventTemplate}"
                            SelectionMode="None"
                            VerticalScrollBarVisibility="Never"
                            EmptyView="{StaticResource EventsEmptyViewTemplate}"
                            Margin="0,5,0,0">
                <CollectionView.ItemsLayout>
                    <LinearItemsLayout Orientation="Vertical" ItemSpacing="12"/>
                </CollectionView.ItemsLayout>
            </CollectionView>

        </Grid>
    </ContentPage.Content>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:EventIndicatorsConverter x:Key="EventIndicatorsConverter"/>
            <converters:DateHasEventTypeConverter x:Key="DateHasEventTypeConverter"/>
            <converters:DateHasAnyEventConverter x:Key="DateHasAnyEventConverter"/>
            <converters:DateHasAnyEventColorConverter x:Key="DateHasAnyEventColorConverter"/>
            <converters:TimeOfDayToStringConverter x:Key="TimeOfDayToStringConverter"/>
            <converters:TimeOfDayToColorConverter x:Key="TimeOfDayToColorConverter"/>
            <converters:IsExpiredConverter x:Key="IsExpiredConverter"/>
            <converters:EventPriorityToColorConverter x:Key="EventPriorityToColorConverter"/>
            <converters:EventPriorityToIconConverter x:Key="EventPriorityToIconConverter"/>
            <converters:PriorityVisibilityConverter x:Key="PriorityVisibilityConverter"/>
            <converters:ProgressToAngleConverter x:Key="ProgressToAngleConverter"/>
            <x:Double x:Key="CircleSize">88</x:Double>
            
            <!-- Layout Resources -->
            <LinearItemsLayout x:Key="HorizontalLinearLayout" 
                             Orientation="Horizontal" 
                             ItemSpacing="8"
                             SnapPointsType="None"
                             SnapPointsAlignment="Center"/>
            
            <!-- Date Selector Item Template -->
            <DataTemplate x:Key="DateTemplate" x:DataType="system:DateTime">
                <Grid x:Name="rootContainer" 
                       WidthRequest="60"
                       HeightRequest="75"
                       Padding="0" 
                       Margin="0"
                       BackgroundColor="Transparent">
                    <!-- VSM moved into frame to avoid XAMLC TargetName issues -->
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Day of Week -->
                    <Label Grid.Row="0" 
                          Text="{Binding ., StringFormat='{0:ddd}'}"
                          FontSize="15"
                          FontAttributes="None"
                          TextColor="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}"
                          HorizontalOptions="Center"
                          Margin="0,0,0,4"/>

                    <!-- Day number in circle/just text -->
                    <Border Grid.Row="1"
                          x:Name="dayFrame"
                          StrokeShape="RoundRectangle 22" 
                          Padding="0"
                          WidthRequest="44"
                          HeightRequest="44"
                          BackgroundColor="Transparent" 
                          Stroke="Transparent"
                          StrokeThickness="0"
                          HorizontalOptions="Center"
                          VerticalOptions="Center">
                        <Label x:Name="dayText"
                              Text="{Binding ., StringFormat='{0:%d}'}"
                              FontSize="18"
                              FontAttributes="None"
                              HorizontalOptions="Center"
                              VerticalOptions="Center"
                              TextColor="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}"/>
                    </Border>

                    <!-- Event Indicators bar -->
                    <BoxView Grid.Row="2"
                            HeightRequest="3"
                            CornerRadius="1.5"
                            WidthRequest="24"
                            HorizontalOptions="Center"
                            Margin="0,4,0,0"
                            IsVisible="False"
                            Color="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />

                    <!-- Event Indicators details -->
                    <HorizontalStackLayout Grid.Row="2"
                                        VerticalOptions="End" 
                                        HorizontalOptions="Center"
                                        Spacing="3"
                                        Margin="0,10,0,0"
                                        IsVisible="False">
                        <BoxView WidthRequest="6" 
                                HeightRequest="6" 
                                CornerRadius="3"
                                Color="{StaticResource MedicationBlue}"
                                IsVisible="{Binding ., Converter={StaticResource DateHasEventTypeConverter}, ConverterParameter={x:Static models:EventType.MedicationTreatment}}"/>
                        
                        <BoxView WidthRequest="6" 
                                HeightRequest="6"
                                CornerRadius="3"
                                Color="{StaticResource PhotoPurple}"
                                IsVisible="{Binding ., Converter={StaticResource DateHasEventTypeConverter}, ConverterParameter={x:Static models:EventType.Photo}}"/>
                                
                        <BoxView WidthRequest="6" 
                                HeightRequest="6"
                                CornerRadius="3"
                                Color="{StaticResource VideoOrange}"
                                IsVisible="{Binding ., Converter={StaticResource DateHasEventTypeConverter}, ConverterParameter={x:Static models:EventType.Video}}"/>
                    </HorizontalStackLayout>
                    
                    <Grid.GestureRecognizers>
                        <!-- REMOVED: The TapGestureRecognizer below was redundant as selection is handled by CollectionView.SelectedItem -->
                        <TapGestureRecognizer 
                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:TodayViewModel}}, Path=OpenMonthCalendarCommand}"
                            CommandParameter="{Binding .}"
                            NumberOfTapsRequired="2" />
                    </Grid.GestureRecognizers>

                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="dayFrame" Property="Border.BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="dayFrame" Property="Border.Stroke" Value="Transparent" />
                                    <Setter TargetName="dayFrame" Property="Border.StrokeThickness" Value="0" />
                                    <Setter TargetName="dayText" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" /> 
                                    <Setter Property="Scale" Value="1.0" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="Selected">
                                <VisualState.Setters>
                                    <Setter TargetName="dayFrame" Property="Border.BackgroundColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
                                    <Setter TargetName="dayFrame" Property="Border.Stroke" Value="Transparent" />
                                    <Setter TargetName="dayFrame" Property="Border.StrokeThickness" Value="0" />
                                    <Setter TargetName="dayText" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
                                    <Setter Property="Scale" Value="1.05" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Grid>
            </DataTemplate>

            <!-- Event Item Template -->
            <DataTemplate x:Key="EventTemplate" x:DataType="models:CalendarEvent">
                <!-- Card without swipe actions -->
                <SwipeView>
                    <SwipeView.RightItems>
                        <SwipeItems Mode="Execute">
                            <SwipeItem
                                    BackgroundColor="Transparent"
                                    Invoked="OnSwipeItemDoneInvoked">
                                <!-- no icon -->
                            </SwipeItem>
                        </SwipeItems>
                    </SwipeView.RightItems>
                    <Border x:Name="rootCard"
                            Style="{StaticResource CalendarCardBorderStyle}"
                            StrokeShape="RoundRectangle 20"
                            Padding="16,12,16,12">
                        <!-- Long press and press feedback behavior -->
                        <Border.Behaviors>
                            <toolkit:TouchBehavior
                                  BindingContext="{Binding Source={x:Reference rootCard}, Path=BindingContext}"
                                  LongPressDuration="600"
                                  LongPressCommand="{Binding Source={x:Reference TodayPageRoot}, Path=BindingContext.ToggleEventCompletionCommand}"
                                  LongPressCommandParameter="{Binding .}"
                                  PressedScale="0.96"
                                  PressedOpacity="0.7"
                                  PressedAnimationDuration="80"
                                  PressedAnimationEasing="{x:Static Easing.CubicOut}"
                                  DefaultScale="1"
                                  DefaultOpacity="1" />
                        </Border.Behaviors>

                        <Grid ColumnDefinitions="Auto,*" ColumnSpacing="16" RowDefinitions="Auto,*" VerticalOptions="Center">
                            <!-- Icon with background -->
                            <Frame Grid.RowSpan="2" Grid.Column="0"
                                   WidthRequest="44"
                                   HeightRequest="44"
                                   CornerRadius="22"
                                   Padding="0"
                                   HasShadow="False"
                                   BorderColor="Transparent"
                                   BackgroundColor="{Binding EventType, Converter={StaticResource EventTypeToColorConverter}, ConverterParameter=DarkAware}">
                                <Label Text="{Binding EventType, Converter={StaticResource EventTypeToIconConverter}}"
                                       FontFamily="MaterialIcons"
                                       FontSize="20"
                                       TextColor="White"
                                       HorizontalOptions="Center"
                                       VerticalOptions="Center"/>
                            </Frame>

                            <!-- Task Content -->
                            <Label x:Name="timeLabel"
                                   Grid.Column="1"
                                   Text="{Binding Date, StringFormat='{0:HH:mm}'}"
                                   FontSize="15"
                                   FontAttributes="None"
                                   TextColor="{AppThemeBinding Light={StaticResource Gray700}, Dark={StaticResource Gray400}}">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding IsCompleted}" Value="True">
                                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <VerticalStackLayout Grid.Column="1" Grid.Row="1" Spacing="3" VerticalOptions="Start">
                                <Label x:Name="titleLabel"
                                       Text="{Binding Title}"
                                       FontSize="18"
                                       FontAttributes="Bold"
                                       TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding IsCompleted}" Value="True">
                                            <Setter Property="TextDecorations" Value="Strikethrough" />
                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <Grid>
                                    <Label x:Name="descriptionLabel"
                                           Text="{Binding Description}"
                                           FontSize="14"
                                           LineBreakMode="TailTruncation"
                                           MaxLines="2"
                                           TextColor="{AppThemeBinding Light={StaticResource Gray700}, Dark={StaticResource Gray400}}"/>
                                    <Label Text="Подробнее..."
                                           FontSize="13"
                                           TextColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}"
                                           HorizontalOptions="End"
                                           VerticalOptions="End"
                                           IsVisible="{Binding Source={x:Reference descriptionLabel}, Path=LineBreakMode, Converter={StaticResource StringNotEmptyConverter}}">
                                        <Label.GestureRecognizers>
                                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:TodayViewModel}}, Path=ShowEventDetailsCommand}"
                                                                 CommandParameter="{Binding .}"/>
                                        </Label.GestureRecognizers>
                                    </Label>
                                </Grid>
                            </VerticalStackLayout>
                        </Grid>
                        <!-- Visual state when completed -->
                        <Border.Triggers>
                            <DataTrigger TargetType="Border" Binding="{Binding IsCompleted}" Value="True">
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource CardCompletedLight}, Dark={StaticResource CardCompletedDark}}" />
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                        </Border.Triggers>
                    </Border>
                </SwipeView>
            </DataTemplate>
            
            <!-- Empty View Template (Moved here) -->
            <ControlTemplate x:Key="EventsEmptyViewTemplate">
                <StackLayout VerticalOptions="Center" HorizontalOptions="Center" Spacing="10" Padding="20">
                    <Image Source="no_events_placeholder.png" HeightRequest="100" WidthRequest="100" Aspect="AspectFit" />
                    <Label Text="Нет событий на выбранную дату" 
                           HorizontalOptions="Center" 
                           FontSize="18"
                           TextColor="{AppThemeBinding Light={StaticResource Gray700}, Dark={StaticResource Gray400}}"/>
                    <Label Text="Попробуйте выбрать другой день или добавьте новые события." 
                           HorizontalOptions="Center" 
                           FontSize="14"
                           TextColor="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray500}}"
                           HorizontalTextAlignment="Center"/>
                </StackLayout>
            </ControlTemplate>

            <!-- Style for restriction circular icon -->
            <Style x:Key="RestrictionIconBorderStyle" TargetType="Border">
                <Setter Property="WidthRequest" Value="40" />
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="StrokeShape">
                    <EllipseGeometry RadiusX="20" RadiusY="20" />
                </Setter>
                <Setter Property="StrokeThickness" Value="2" />
                <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray600}}" />
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
</ContentPage>