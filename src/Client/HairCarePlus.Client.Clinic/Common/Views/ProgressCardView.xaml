<?xml version="1.0" encoding="utf-8"?>
<ContentView x:Class="HairCarePlus.Client.Clinic.Common.Views.ProgressCardView"
             x:Name="thisView"
             x:DataType="models:ProgressFeedItem"
             xmlns:viewmodels="clr-namespace:HairCarePlus.Client.Clinic.Features.Patient.ViewModels"
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:models="clr-namespace:HairCarePlus.Client.Clinic.Features.Patient.Models"
             xmlns:converters="clr-namespace:HairCarePlus.Client.Clinic.Common.Converters"
             xmlns:maui="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:behaviors="clr-namespace:HairCarePlus.Client.Clinic.Common.Behaviors"
             >
    <ContentView.Resources>
        <ResourceDictionary>
            <converters:CountToBoolConverter x:Key="CountToBoolConverter" />
            <converters:ReadMoreVisibilityConverter x:Key="ReadMoreVisibilityConverter" Threshold="120" />
            <converters:NullToBoolConverter x:Key="NullToBoolConverter" />
            <converters:StringNullOrEmptyBoolConverter x:Key="StringNullOrEmptyBoolConverter" />
            <converters:FilePathToImageSourceConverter x:Key="FilePathToImageSourceConverter" />
            <converters:IsSameItemConverter x:Key="IsSameItemConverter" />
            <converters:IsNotSameItemConverter x:Key="IsNotSameItemConverter" />
            <converters:NotBoolConverter x:Key="NotBoolConverter" />
        </ResourceDictionary>
    </ContentView.Resources>

    <!-- Instagram-style full-width card -->
    <Border Style="{StaticResource InstagramCardStyle}"
            Margin="16,8"
            Padding="0">
        <Grid RowDefinitions="Auto,Auto" RowSpacing="0">

            <!-- Photo area with floating day badge -->
            <Border Grid.Row="0"
                    StrokeThickness="0"
                    HeightRequest="300">
                <Grid>
                    <!-- Carousel for up to 3 photos -->
                    <CarouselView ItemsSource="{Binding Photos}"
                                  IndicatorView="{x:Reference photoIndicators}"
                                  IsSwipeEnabled="True"
                                  PeekAreaInsets="0">
                        <CarouselView.IsVisible>
                            <Binding Path="Photos.Count"
                                     Converter="{StaticResource CountToBoolConverter}"
                                     x:DataTypeArg="models:ProgressFeedItem" />
                        </CarouselView.IsVisible>
                        <CarouselView.ItemTemplate>
                            <DataTemplate x:DataType="models:ProgressPhoto">
                                <Grid>
                                    <!-- Use persistent LocalPath with converter (as Patient app) -->
                                    <Image Source="{Binding LocalPath, Converter={StaticResource FilePathToImageSourceConverter}}"
                                           Aspect="AspectFill" />
                                    <!-- gradient overlay for badge contrast -->
                                    <Rectangle Fill="{StaticResource PhotoOverlayGradient}"
                                               VerticalOptions="Start"
                                               HeightRequest="60" />
                                </Grid>
                            </DataTemplate>
                        </CarouselView.ItemTemplate>
                    </CarouselView>

                    <!-- Day badge -->
                    <Border Style="{StaticResource FloatingDayBadgeStyle}"
                            HorizontalOptions="Start"
                            VerticalOptions="Start"
                            Margin="16,16">
                        <Label Text="{Binding Title}"
                               Style="{StaticResource DayBadgeTextStyle}" />
                    </Border>
                </Grid>
            </Border>

            <!-- Content area -->
            <VerticalStackLayout Grid.Row="1"
                                 Padding="16,12"
                                 Spacing="12">

                <!-- Photo indicators below image -->
                <IndicatorView x:Name="photoIndicators"
                               Style="{StaticResource InstagramPhotoIndicatorStyle}"
                               HorizontalOptions="Center">
                    <IndicatorView.IsVisible>
                        <Binding Path="Photos.Count"
                                 Converter="{StaticResource CountToBoolConverter}"
                                 ConverterParameter="1"
                                 x:DataTypeArg="models:ProgressFeedItem" />
                    </IndicatorView.IsVisible>
                </IndicatorView>

                <!-- Date label -->
            <Label Text="{Binding Date, StringFormat='{0:d MMMM yyyy}'}"
                       Style="{StaticResource InstagramDateStyle}" />

                <!-- Doctor comment: single bordered block with view and edit modes -->
                <Border Style="{StaticResource DoctorCommentStyle}">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="*">
                        <!-- Header -->
                        <HorizontalStackLayout Grid.Row="0" Spacing="6">
                            <Ellipse Fill="{StaticResource DoctorIndicatorColor}"
                                     WidthRequest="8"
                                     HeightRequest="8"
                                     VerticalOptions="Center" />
                            <Label Text="Комментарий врача"
                                   Style="{StaticResource CommentHeaderStyle}" />
                        </HorizontalStackLayout>

                        <!-- Read-only text -->
                        <Label Grid.Row="1"
                               Text="{Binding DoctorReportSummary, TargetNullValue='Нажмите для добавления комментария'}"
                               Style="{StaticResource CommentTextStyle}"
                               MinimumHeightRequest="44">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                            Binding="{Binding Source={x:Reference InlineEditPanel}, Path=IsVisible}"
                                            Value="True">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                            Binding="{Binding DoctorReportSummary}"
                                            Value="">
                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
                                    <Setter Property="FontAttributes" Value="Italic" />
                                </DataTrigger>
                            </Label.Triggers>
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Tapped="OnDoctorCommentTapped" />
                            </Label.GestureRecognizers>
                        </Label>

                        <!-- Edit in place -->
                        <Grid Grid.Row="1"
                              x:Name="InlineEditPanel"
                              x:DataType="{x:Null}"
                              ColumnDefinitions="*,Auto"
                              IsVisible="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CommentTarget, Converter={StaticResource IsSameItemConverter}, ConverterParameter={x:Reference thisView}}">
                            <Editor x:Name="InlineEditor"
                                   Grid.Column="0"
                                   Text="{Binding Path=BindingContext.CommentText, Source={RelativeSource AncestorType={x:Type ContentPage}}, Mode=TwoWay}"
                                   Placeholder="Добавить комментарий"
                                   PlaceholderColor="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}"
                                   TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                                   BackgroundColor="Transparent"
                                   FontSize="17"
                                   AutoSize="TextChanges"
                                   Focused="OnEditorFocused"
                                   Keyboard="Chat" />
                            <Button Grid.Column="1"
                                    Text="↑"
                                    FontSize="24"
                                    FontAttributes="Bold"
                                    BackgroundColor="Transparent"
                                    TextColor="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                                    IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.IsSendEnabled}"
                                    IsVisible="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.IsSendEnabled}"
                                    Clicked="OnSendClicked" />
                        </Grid>
                    </Grid>
                </Border>
        </VerticalStackLayout>

        </Grid>

        <!-- Pressed animation -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="0.98" />
                            <Setter Property="Opacity" Value="0.9" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </VisualStateManager.VisualStateGroups>
    </Border>
</ContentView> 