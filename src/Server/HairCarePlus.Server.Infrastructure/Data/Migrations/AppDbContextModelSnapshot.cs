// <auto-generated />
using System;
using HairCarePlus.Server.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HairCarePlus.Server.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.Clinic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.ClinicStaff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClinicId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Specializations")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("ClinicStaff");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.DeliveryQueue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BlobUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<byte>("DeliveredMask")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("ReceiversMask")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAtUtc");

                    b.HasIndex("PatientId");

                    b.ToTable("DeliveryQueue");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Certifications")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClinicId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DoctorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferredLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SurgeryDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("DoctorId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.ChatAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ChatMessageId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatMessageId");

                    b.ToTable("ChatAttachment");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DoctorId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceLanguage")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TargetLanguage")
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedContent")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SentTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.PhotoComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PhotoReportId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PhotoReportId");

                    b.ToTable("PhotoComments", (string)null);
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.PhotoReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CaptureDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("PhotoReports", (string)null);
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.ProgressEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CompletedTasks")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalTasks")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId", "DateUtc")
                        .IsUnique();

                    b.ToTable("ProgressEntries", (string)null);
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.Restriction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Restrictions");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.TreatmentSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DoctorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("TreatmentSchedules");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.TreatmentTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TreatmentScheduleId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TreatmentScheduleId");

                    b.ToTable("TreatmentTask");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.Clinic", b =>
                {
                    b.OwnsOne("HairCarePlus.Server.Domain.Entities.ClinicSettings", "Settings", b1 =>
                        {
                            b1.Property<Guid>("ClinicId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("DefaultLanguage")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("SupportedLanguages")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ClinicId");

                            b1.ToTable("Clinics");

                            b1.WithOwner()
                                .HasForeignKey("ClinicId");

                            b1.OwnsOne("HairCarePlus.Server.Domain.Entities.AISettings", "AISettings", b2 =>
                                {
                                    b2.Property<Guid>("ClinicSettingsClinicId")
                                        .HasColumnType("TEXT");

                                    b2.Property<bool>("EnableAutoTranslation")
                                        .HasColumnType("INTEGER");

                                    b2.Property<bool>("EnablePhotoAnalysis")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("PreferredAIServices")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("ClinicSettingsClinicId");

                                    b2.ToTable("Clinics");

                                    b2.WithOwner()
                                        .HasForeignKey("ClinicSettingsClinicId");
                                });

                            b1.OwnsOne("HairCarePlus.Server.Domain.Entities.NotificationSettings", "NotificationSettings", b2 =>
                                {
                                    b2.Property<Guid>("ClinicSettingsClinicId")
                                        .HasColumnType("TEXT");

                                    b2.Property<bool>("EnableEmailNotifications")
                                        .HasColumnType("INTEGER");

                                    b2.Property<bool>("EnablePushNotifications")
                                        .HasColumnType("INTEGER");

                                    b2.Property<bool>("EnableSMSNotifications")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("ReminderLeadTime")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("ClinicSettingsClinicId");

                                    b2.ToTable("Clinics");

                                    b2.WithOwner()
                                        .HasForeignKey("ClinicSettingsClinicId");
                                });

                            b1.Navigation("AISettings")
                                .IsRequired();

                            b1.Navigation("NotificationSettings")
                                .IsRequired();
                        });

                    b.OwnsMany("HairCarePlus.Server.Domain.Entities.WorkingHours", "WorkingHours", b1 =>
                        {
                            b1.Property<Guid>("ClinicId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<TimeSpan>("CloseTime")
                                .HasColumnType("TEXT");

                            b1.Property<int>("DayOfWeek")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("IsClosed")
                                .HasColumnType("INTEGER");

                            b1.Property<TimeSpan>("OpenTime")
                                .HasColumnType("TEXT");

                            b1.HasKey("ClinicId", "Id");

                            b1.ToTable("WorkingHours");

                            b1.WithOwner()
                                .HasForeignKey("ClinicId");
                        });

                    b.Navigation("Settings")
                        .IsRequired();

                    b.Navigation("WorkingHours");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.ClinicStaff", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.Entities.Clinic", null)
                        .WithMany("Staff")
                        .HasForeignKey("ClinicId");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.Patient", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.Entities.Clinic", null)
                        .WithMany("Patients")
                        .HasForeignKey("ClinicId");

                    b.HasOne("HairCarePlus.Server.Domain.Entities.Doctor", null)
                        .WithMany("Patients")
                        .HasForeignKey("DoctorId");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.ChatAttachment", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.ValueObjects.ChatMessage", null)
                        .WithMany("Attachments")
                        .HasForeignKey("ChatMessageId");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.ChatMessage", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.Entities.Doctor", null)
                        .WithMany("ChatMessages")
                        .HasForeignKey("DoctorId");

                    b.HasOne("HairCarePlus.Server.Domain.Entities.Patient", null)
                        .WithMany("ChatMessages")
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.Notification", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.Entities.Patient", null)
                        .WithMany("Notifications")
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.PhotoComment", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.ValueObjects.PhotoReport", "PhotoReport")
                        .WithMany("Comments")
                        .HasForeignKey("PhotoReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhotoReport");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.PhotoReport", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.Entities.Patient", "Patient")
                        .WithMany("PhotoReports")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("HairCarePlus.Server.Domain.ValueObjects.AnalysisResult", "AnalysisResult", b1 =>
                        {
                            b1.Property<Guid>("PhotoReportId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("AIAnalysis")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("AnalysisDate")
                                .HasColumnType("TEXT");

                            b1.Property<double>("GrowthPercentage")
                                .HasColumnType("REAL");

                            b1.HasKey("PhotoReportId");

                            b1.ToTable("PhotoReports");

                            b1.WithOwner()
                                .HasForeignKey("PhotoReportId");
                        });

                    b.Navigation("AnalysisResult")
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.TreatmentSchedule", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.Entities.Doctor", null)
                        .WithMany("TreatmentSchedules")
                        .HasForeignKey("DoctorId");

                    b.HasOne("HairCarePlus.Server.Domain.Entities.Patient", null)
                        .WithMany("TreatmentSchedules")
                        .HasForeignKey("PatientId");

                    b.OwnsOne("HairCarePlus.Server.Domain.ValueObjects.RecurrencePattern", "RecurrencePattern", b1 =>
                        {
                            b1.Property<Guid>("TreatmentScheduleId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("DaysOfWeek")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Interval")
                                .HasColumnType("INTEGER");

                            b1.Property<TimeSpan>("TimeOfDay")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.HasKey("TreatmentScheduleId");

                            b1.ToTable("TreatmentSchedules");

                            b1.WithOwner()
                                .HasForeignKey("TreatmentScheduleId");
                        });

                    b.Navigation("RecurrencePattern")
                        .IsRequired();
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.TreatmentTask", b =>
                {
                    b.HasOne("HairCarePlus.Server.Domain.ValueObjects.TreatmentSchedule", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TreatmentScheduleId");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.Clinic", b =>
                {
                    b.Navigation("Patients");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.Doctor", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("Patients");

                    b.Navigation("TreatmentSchedules");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.Entities.Patient", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("Notifications");

                    b.Navigation("PhotoReports");

                    b.Navigation("TreatmentSchedules");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.ChatMessage", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.PhotoReport", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("HairCarePlus.Server.Domain.ValueObjects.TreatmentSchedule", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
